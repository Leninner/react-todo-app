{"version":3,"sources":["TodoContext/index.js","TodoContext/useLocalStorage.js","TodoCounter/index.js","TodoSearch/index.js","CreateTodoButton/index.js","TodoItem/index.js","TodoList/index.js","TodoBrand/index.js","Modal/index.js","TodoForm/index.js","TodoError/index.js","TodoLoading/index.js","TodoEmpty/index.js","App/AppUI.js","App/index.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","props","itemName","initialValue","useState","error","setError","loading","setLoading","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","Provider","value","completeTodos","todoIndex","findIndex","newTodos","addTodos","push","deleteTodos","splice","children","TodoCounter","useContext","className","TodoSearch","placeholder","onChange","event","console","log","target","CreateTodoButton","onClick","TodoItem","onComplete","onDelete","TodoList","TodoBrand","Modal","ReactDOM","createPortal","document","getElementById","TodoForm","newTodoValue","setNewTodoValue","onSubmit","preventDefault","type","TodoError","TodoLoading","TodoEmpty","AppUI","Fragment","map","App","render"],"mappings":"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","file":"static/js/main.0b52ba4e.chunk.js","sourcesContent":["import React from 'react';\nimport { useLocalStorage } from './useLocalStorage';\n\nconst TodoContext = React.createContext(); // Nos permite crear contextos para compartir el estado entre todos los componentes de la aplicación, el nombre TodoContext puede ser facilmente un objeto.\n\nconst TodoProvider = (props) => {\n  const { item: todos, saveItem: saveTodos, loading, error } = useLocalStorage('TODOS_V1', []);\n\n  const [searchValue, setSearchValue] = React.useState(''); // Forma de trabajar los estados.\n  const [openModal, setOpenModal] = React.useState(false);\n\n  const completedTodos = todos.filter((todo) => !!todo.completed).length;\n  const totalTodos = todos.length;\n\n  let searchedTodos = [];\n\n  if (!searchValue.length >= 1) {\n    searchedTodos = todos;\n  } else {\n    searchedTodos = todos.filter((todo) => {\n      const todoText = todo.text.toLowerCase();\n      const searchText = searchValue.toLowerCase();\n      return todoText.includes(searchText);\n    });\n  }\n\n  const addTodos = (text) => {\n    const newTodos = [...todos];\n    newTodos.push({ completed: false, text: text });\n\n    saveTodos(newTodos);\n  };\n\n  const completeTodos = (text) => {\n    const todoIndex = todos.findIndex((todo) => todo.text === text);\n    const newTodos = [...todos];\n    newTodos[todoIndex].completed = true;\n\n    saveTodos(newTodos);\n\n    // todos[todoIndex] = {\n    //   text: todos[todoIndex].text,\n    //   completed: true,\n    // };\n  };\n\n  const deleteTodos = (text) => {\n    const todoIndex = todos.findIndex((todo) => todo.text === text);\n    const newTodos = [...todos];\n    newTodos.splice(todoIndex, 1);\n\n    saveTodos(newTodos);\n\n    // function deleteTodo(text){\n    //   const newTodos = todos.filter(todo=>todo.text !== text)\n    //   setTodos(newTodos)\n    // }\n  };\n\n  return (\n    <TodoContext.Provider\n      value={{\n        loading,\n        error,\n        totalTodos,\n        completedTodos,\n        searchValue,\n        setSearchValue,\n        searchedTodos,\n        completeTodos,\n        addTodos,\n        deleteTodos,\n        openModal,\n        setOpenModal,\n      }}\n    >\n      {props.children}\n    </TodoContext.Provider>\n  ); //Todas las props que se quiera compartir deben ir dentro de value\n};\n\nexport { TodoContext, TodoProvider };\n","import React from 'react';\n\n//REACT HOOk\nfunction useLocalStorage(itemName, initialValue) {\n  const [error, setError] = React.useState(false);\n  const [loading, setLoading] = React.useState(true);\n\n  const [item, setItem] = React.useState(initialValue);\n\n  React.useEffect(() => {\n    setTimeout(() => {\n      try {\n        // Nos ayuda a ejecutar código pero si ocurre un error, utilizamos catch y no se crashee\n        const localStorageItem = localStorage.getItem(itemName);\n        let parsedItem;\n\n        //Lógica para comprobar si ya han usado la aplicación o no.\n        if (!localStorageItem) {\n          localStorage.setItem(itemName, JSON.stringify(initialValue));\n          parsedItem = initialValue;\n        } else {\n          parsedItem = JSON.parse(localStorageItem);\n        }\n        setItem(parsedItem);\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n      }\n    }, 1000);\n  });\n\n  //Función para controlar el flujo de la app\n  const saveItem = (newItem) => {\n    try {\n      const stringifiedItem = JSON.stringify(newItem);\n      localStorage.setItem(itemName, stringifiedItem);\n      setItem(newItem);\n    } catch (error) {\n      setError(error);\n    }\n  };\n  return { item, saveItem, loading, error };\n}\n\nexport { useLocalStorage };\n","import React from 'react';\nimport './TodoCounter.css';\nimport { TodoContext } from '../TodoContext';\n\nfunction TodoCounter() {\n  const { totalTodos, completedTodos } = React.useContext(TodoContext);\n\n  return (\n    <h2 className='TodoCounter'>\n      You have completed {completedTodos} of {totalTodos} TODOs{' '}\n    </h2>\n  );\n}\n\nexport { TodoCounter };\n","import React from 'react';\nimport './TodoSearch.css';\nimport { TodoContext } from '../TodoContext';\n\nfunction TodoSearch() {\n  const { searchValue, setSearchValue } = React.useContext(TodoContext);\n\n  const onSearchValueChange = (event) => {\n    console.log(event.target.value);\n    setSearchValue(event.target.value);\n  };\n\n  return <input placeholder='Buscador...' value={searchValue} className='TodoSearch' onChange={onSearchValueChange} />;\n}\n\nexport { TodoSearch };\n","import React from 'react';\nimport './CreateTodoButton.css';\nimport { TodoContext } from '../TodoContext';\n\nfunction CreateTodoButton() {\n  const { openModal, setOpenModal } = React.useContext(TodoContext);\n\n  const handleClick = () => {\n    setOpenModal(!openModal);\n  };\n\n  return (\n    <button className='CreateTodoButton' onClick={handleClick}>\n      +\n    </button>\n  );\n}\n\nexport { CreateTodoButton };\n","import React from 'react';\nimport './TodoItem.css';\n\nfunction TodoItem(props) {\n  return (\n    <li className='TodoItem'>\n      <span className={`Icon Icon-check ${props.completed && 'Icon-check--active'}`} onClick={props.onComplete}>\n        ᄼ\n      </span>\n      <p className={`TodoItem-p ${props.completed && 'TodoItem-p--complete'}`}>{props.text}</p>\n      <span className='Icon Icon-delete' onClick={props.onDelete}>\n        X\n      </span>\n    </li>\n  );\n}\n\nexport { TodoItem };\n","import React from 'react';\nimport './TodoList.css';\n\nfunction TodoList(props) {\n  return (\n    <section>\n      <ul>{props.children}</ul>\n    </section>\n  );\n}\n\nexport { TodoList };\n","import React from 'react';\nimport './TodoBrand.css';\n\nfunction TodoBrand() {\n  return (\n    <header className='header'>\n      <h1>What are you gonna do?</h1>\n    </header>\n  );\n}\n\nexport { TodoBrand };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Modal.css';\n\nfunction Modal({ children }) {\n  return ReactDOM.createPortal(<div className='ModalBackground'>{children}</div>, document.getElementById('modal'));\n}\n\nexport { Modal };\n","import React from 'react';\nimport { TodoContext } from '../TodoContext';\nimport './TodoForm.css';\n\nfunction TodoForm() {\n  const [newTodoValue, setNewTodoValue] = React.useState('');\n\n  const { addTodos, setOpenModal } = React.useContext(TodoContext);\n\n  const onChange = (event) => {\n    setNewTodoValue(event.target.value);\n  };\n\n  const onCancel = () => {\n    setOpenModal(false);\n  };\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    addTodos(newTodoValue);\n    setOpenModal(false);\n  };\n\n  return (\n    <form onSubmit={onSubmit}>\n      <label>Escribe tu nuevo To Do</label>\n      <textarea value={newTodoValue} onChange={onChange} placeholder='Escribe una nueva tarea' />\n      <div className='TodoForm-buttonContainer'>\n        <button type='button' className='TodoForm-button TodoForm-button-cancel' onClick={onCancel}>\n          Cancelar\n        </button>\n\n        <button className='TodoForm-button TodoForm-button-add' type='submit'>\n          Añadir\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport { TodoForm };\n","import React from 'react';\n\nfunction TodoError({ error }) {\n  return <p>Desespérate, hubo un {error}</p>;\n}\n\nexport { TodoError };\n","import React from 'react';\nimport './TodoLoading.css';\n\nexport default function TodoLoading() {\n  return (\n    <div className='LoadingTodo-container'>\n      <span className='LoadingTodo-completeIcon'></span>\n      <p className='LoadingTodo-text'>Cargando TODOs...</p>\n      <span className='LoadingTodo-deleteIcon'></span>\n    </div>\n  );\n}\n\nexport { TodoLoading };\n","import React from 'react';\nimport './TodoEmpty.css';\n\nfunction TodoEmpty() {\n  return (\n    <div className='emptyTodo'>\n      <p>¡Crea tu primer TODO!</p>\n    </div>\n  );\n}\n\nexport { TodoEmpty };\n","import React from 'react';\nimport { TodoCounter } from '../TodoCounter';\nimport { TodoSearch } from '../TodoSearch';\nimport { CreateTodoButton } from '../CreateTodoButton';\nimport { TodoItem } from '../TodoItem';\nimport { TodoList } from '../TodoList';\nimport { TodoBrand } from '../TodoBrand';\nimport { TodoContext } from '../TodoContext';\nimport { Modal } from '../Modal';\nimport { TodoForm } from '../TodoForm';\nimport { TodoError } from '../TodoError';\nimport { TodoLoading } from '../TodoLoading';\nimport { TodoEmpty } from '../TodoEmpty';\n\nfunction AppUI() {\n  const { error, loading, searchedTodos, completeTodos, deleteTodos, openModal } = React.useContext(TodoContext);\n\n  return (\n    <React.Fragment>\n      <TodoBrand />\n      <TodoCounter />\n      <TodoSearch />\n\n      {/* Aquí llamamos los métodos de value que queremos usar */}\n      <TodoList>\n        {error && <TodoError error={error} />}\n        {loading && <TodoLoading />}\n        {!loading && !searchedTodos.length && <TodoEmpty />}\n\n        {searchedTodos.map((todo) => (\n          <TodoItem\n            key={todo.text}\n            text={todo.text}\n            completed={todo.completed}\n            onComplete={() => {\n              completeTodos(todo.text);\n            }}\n            onDelete={() => {\n              deleteTodos(todo.text);\n            }}\n          />\n        ))}\n      </TodoList>\n\n      {!!openModal && (\n        <Modal>\n          <TodoForm />\n        </Modal>\n      )}\n\n      <CreateTodoButton />\n    </React.Fragment>\n  );\n}\n\nexport { AppUI };\n","// import './App.css';\nimport React from 'react';\nimport { AppUI } from './AppUI';\nimport { TodoProvider } from '../TodoContext';\n\n// const defaultTodos = [\n//   { text: 'Cortar Cebolla', completed: false },\n//   { text: 'Intro a React', completed: false },\n//   { text: 'Llorar con la llorona', completed: false },\n// ];\n\nfunction App() {\n  return (\n    <TodoProvider>\n      <AppUI />;\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/index';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}